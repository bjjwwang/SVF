name: svf-windows-build

on: [push]

env:
  SVF_CTIR: 1
  SVF_Z3: 1
  SVF_DIR: $GITHUB_WORKSPACE
  LLVM_URL: "https://github.com/bjjwwang/SVF-LLVM/releases/download/16.0.0/llvm-windows-build.zip"
  Z3_URL: "https://github.com/Z3Prover/z3/releases/download/z3-4.15.0/z3-4.15.0-x64-win.zip"
  INSTALL_DIR: ${{ github.workspace }}/install

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download and extract LLVM
        run: |
          Invoke-WebRequest -Uri $env:LLVM_URL -OutFile llvm.zip
          Write-Host "Current directory before extraction:"
          Get-ChildItem
          New-Item -ItemType Directory -Force -Path "$env:GITHUB_WORKSPACE\llvm-windows-build"
          Expand-Archive -Path llvm.zip -DestinationPath "$env:GITHUB_WORKSPACE\llvm-windows-build" -Force
          Write-Host "Current directory after extraction:"
          Get-ChildItem
          $env:LLVM_DIR = "$env:GITHUB_WORKSPACE\llvm-windows-build"
          echo "LLVM_DIR=$env:LLVM_DIR" >> $env:GITHUB_ENV
          Write-Host "LLVM directory structure:"
          Get-ChildItem -Path $env:LLVM_DIR -Directory | ForEach-Object {
            Write-Host "`n$($_.Name):"
            Get-ChildItem -Path $_.FullName -Directory | ForEach-Object {
              Write-Host "  $($_.Name)"
            }
          }

      - name: Download and extract Z3
        run: |
          Invoke-WebRequest -Uri $env:Z3_URL -OutFile z3.zip
          Expand-Archive -Path z3.zip -DestinationPath .
          $env:Z3_DIR = "$env:GITHUB_WORKSPACE\z3-4.15.0-x64-win"
          echo "Z3_DIR=$env:Z3_DIR" >> $env:GITHUB_ENV

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.23.0'

      - name: Build SVF
        run: |
          mkdir build
          cd build
          $cmakeArgs = @(
            "..",
            "-G", "Ninja",
            "-DCMAKE_BUILD_TYPE=Release",
            "-DLLVM_DIR=$env:LLVM_DIR",
            "-DZ3_DIR=$env:Z3_DIR",
            "-DSVF_USE_PIC=ON",
            "-DBUILD_SHARED_LIBS=ON",
            "-DSVF_ENABLE_RTTI=ON",
            "-DCMAKE_INSTALL_PREFIX=$env:INSTALL_DIR"
          )
          cmake $cmakeArgs
          cmake --build . --config Release
          cmake --install .

      - name: Clone SVF-windows-CI
        run: |
          git clone https://github.com/bjjwwang/SVF-windows-CI.git
          $env:TEST_FILE = "$env:GITHUB_WORKSPACE\SVF-windows-CI\CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_01.c.bc"
          echo "TEST_FILE=$env:TEST_FILE" >> $env:GITHUB_ENV

      - name: Run AE test
        run: |
          $env:AE_EXE = "$env:INSTALL_DIR\bin\ae.exe"
          Write-Host "Running AE test with file: $env:TEST_FILE"
          & $env:AE_EXE -overflow $env:TEST_FILE

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: svf-windows
          path: ${{ env.INSTALL_DIR }}
          retention-days: 5 